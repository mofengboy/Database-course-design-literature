<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunan.literature.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.sunan.literature.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="CHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="sex" javaType="INTEGER" property="sex"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
    </resultMap>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, username,email, sex, register_time
        from user
    </select>
    <select id="selectUserByEmailAndPassword"
            resultMap="BaseResultMap">
        select id,username,password,email,sex,register_time
        from user
        where email = #{email,jdbcType=VARCHAR} and password=#{password,jdbcType=CHAR}
    </select>
    <select id="selectUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,username,email,sex,register_time
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,username,email,sex,register_time
        from user
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <update id="updateUserById" parameterType="com.sunan.literature.entity.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
        passsword=#{password,jdbcType=CHAR},
        email = #{email,jdbcType=VARCHAR},
        sex=#{sex,jdbcType=INTEGER},
        register_time = #{registerTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insertUser" parameterType="com.sunan.literature.entity.User">
        insert into user(username,password,email,sex)
        values(#{username,jdbcType=VARCHAR},#{password,jdbcType=CHAR},#{email,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER})
    </insert>
</mapper>