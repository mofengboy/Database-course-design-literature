#spring.datasource.url=jdbc:mysql://localhost/literature?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=literature
#spring.datasource.password=literature001
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#配置c3p0的数据池
#配置数据库名
c3p0.jdbcUrl=jdbc:mysql://localhost/literature?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
#配置username
c3p0.user=literature
#配置password
c3p0.password=literature001
#配置driver
c3p0.driverClass=com.mysql.cj.jdbc.Driver
#配置最小连接池数据
c3p0.minPoolSize=5
#配置最大连接数
c3p0.maxPoolSize=100
#最大空闲时间,3600秒(一个小时)内未使用则连接被丢弃。若为0则永不丢弃
c3p0.maxIdleTime=3600
#当连接池中的连接耗尽的时候c3p0一次同时获取的连接数,每次增加5个连接
c3p0.acquireIncrement=5
#初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间
c3p0.initialPoolSize=5
#每60秒检查所有连接池中的空闲连接
c3p0.idleConnectionTestPeriod=60
#从数据库获取新连接失败后重复尝试的次数
c3p0.acquireRetryAttempts=100
#两次连接中间隔时间，单位毫秒
c3p0.acquireRetryDelay=20
#获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
#获取连接失败后该数据源将申明已断开并永久关闭
c3p0.breakAfterAcquireFailure=false
c3p0.testConnectionOnCheckout=false
#当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒
c3p0.checkoutTimeout=5000
#c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能通过多线程实现多个操作同时被执行
c3p0.numHelperThreads=3
# 设置MyBaits
# 自动使用自增主键填充bean
mybatis.configuration.use-generated-keys=true
# 开启驼峰命名
mybatis.configuration.map-underscore-to-camel-case=true
# 允许使用别名替换列名
mybatis.configuration.use-column-label=true
# mapper文件地址
mybatis.mapper-locations=classpath:mapper/*.xml
# 给实体类设置别名
mybatis.type-aliases-package=com.sunan.literature.entity

#设置响应为utf-8
server.servlet.encoding.force-response=true